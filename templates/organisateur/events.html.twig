{% extends 'base.html.twig' %}

{% block title %}Mes événements
{% endblock %}
{% block body %}
	<div class="page-content">
		<h2 class="text-center">Liste des évévements</h2>
		{% if events is empty %}
			<div class="alert">Vous n'avez pas encore créé d'événements.</div>
		{% else %}
			<ul class="event-list">
				{% for event in events %}
					<li class="event-card">
						<div class="event-header">
							<div>
								<h5>{{ event.title }}</h5>
								<small>Du
									{{ event.startDateTime|date('d/m/Y H:i') }}
									au
									{{ event.endDateTime|date('d/m/Y H:i') }}</small>
							</div>
						</div>

						{% set now = "now"|date('U') %}
						{% set endTime = event.endDateTime|date('U') %}
						{% set startTime = event.startDateTime|date('U') %}
						{% set startWindow = startTime - 1800 %}

						{% if event.isStarted and not event.isFinished and endTime > now %}
							<div class="alert">
								<p>Événement en cours</p>
							</div>
						{% elseif event.isFinished %}
							<div class="alert">
								<p>Événement terminé</p>
							</div>
						{% endif %}

						<div class="event-actions">

							<a href="{{ path('app_event_show', {'id': event.id}) }}" class="btn btn-primary btn-sm">Voir les détails</a>
							{% if event.isApproved %}
								<button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#participantsModal{{ event.id }}">
									Participants
								</button>
							{% endif %}

							{% if is_granted('ROLE_ADMIN') %}
								<button type="button" class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#manageEventModal{{ event.id }}">
									Gérer l'événement
								</button>
							{% endif %}

							{% if is_granted('ROLE_ORGANISATEUR') and event.isApproved %}
								{% if now >= startWindow and now <= endTime and not event.isStarted %}
									<form method="POST" action="{{ path('organisateur_event_start', {'id': event.id}) }}">
										<input type="hidden" name="_token" value="{{ csrf_token('start_event' ~ event.id) }}">
										<button type="submit" class="btn btn-success btn-sm">Démarrer</button>
									</form>
								{% endif %}
							{% endif %}

							{% if is_granted('ROLE_ORGANISATEUR') and event.isStarted and now >= endTime and not event.isFinished %}
								<form method="POST" action="{{ path('organisateur_event_finish', {'id': event.id}) }}">
									<input type="hidden" name="_token" value="{{ csrf_token('finish_event' ~ event.id) }}">
									<button type="submit" class="btn btn-danger btn-sm">Terminer</button>
								</form>
							{% endif %}


						</div>
					</li>
				{% endfor %}
			</ul>
		{% endif %}

		<div style="margin-top:20px;">
			<a href="{{ path('app_home') }}" class="btn btn-secondary">Retour à l'accueil</a>
		</div>
	</div>

	{# Modales de gestion pour les admins #}
	{% for event in events %}
		{% if is_granted('ROLE_ADMIN') %}
			<div class="modal fade" id="manageEventModal{{ event.id }}" tabindex="-1" aria-labelledby="manageEventModalLabel{{ event.id }}" aria-hidden="true">
				<div class="modal-dialog modal-lg modal-dialog-scrollable">
					<div class="modal-content modal-content-custom">
						<div class="modal-header">
							<h5 class="modal-title" id="manageEventModalLabel{{ event.id }}">Gérer l'événement :
								{{ event.title }}</h5>
							<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
						</div>
						<form method="POST" action="{{ path('admin_event_update', {'id': event.id}) }}">
							<div class="modal-body modal-body-dark">
								<div class="mb-3">
									<label for="title{{ event.id }}" class="form-label">Titre</label>
									<input type="text" class="form-control" id="title{{ event.id }}" name="title" value="{{ event.title }}" required>
								</div>

								<div class="mb-3">
									<label for="startDateTime{{ event.id }}" class="form-label">Date & heure de début</label>
									<input type="datetime-local" class="form-control" id="startDateTime{{ event.id }}" name="startDateTime" value="{{ event.startDateTime|date('Y-m-d\\TH:i') }}" required>
								</div>

								<div class="mb-3">
									<label for="endDateTime{{ event.id }}" class="form-label">Date & heure de fin</label>
									<input type="datetime-local" class="form-control" id="endDateTime{{ event.id }}" name="endDateTime" value="{{ event.endDateTime|date('Y-m-d\\TH:i') }}" required>
								</div>

								<div class="form-check mb-3">
									<input class="form-check-input" type="checkbox" id="isApproved{{ event.id }}" name="isApproved" {% if event.isApproved %} checked {% endif %}>
									<label class="form-check-label" for="isApproved{{ event.id }}">Approuvé</label>
								</div>

								<div class="form-check mb-3">
									<input class="form-check-input" type="checkbox" id="isStarted{{ event.id }}" name="isStarted" {% if event.isStarted %} checked {% endif %}>
									<label class="form-check-label" for="isStarted{{ event.id }}">Démarré</label>
								</div>

								<div class="mb-3">
									<label for="maxPlayers{{ event.id }}" class="form-label">Nombre maximum de joueurs</label>
									<input type="number" min="1" class="form-control" id="maxPlayers{{ event.id }}" name="maxPlayers" value="{{ event.maxPlayers }}" required>
								</div>

								<input type="hidden" name="_token" value="{{ csrf_token('update_event' ~ event.id) }}">
							</div>

							<div class="modal-footer d-flex justify-content-between">
								<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
								<div>
									<button type="submit" class="btn btn-primary me-2">Enregistrer</button>
									<button type="button" class="btn btn-danger" onclick="if(confirm('Confirmer la suppression de cet événement ?')) { window.location='{{ path('admin_event_delete', {'id': event.id}) }}' }">Supprimer</button>
								</div>
							</div>
						</form>
					</div>
				</div>
			</div>
		{% endif %}
		{% if is_granted('ROLE_ORGANISATEUR') %}
			<div class="modal fade" id="participantsModal{{ event.id }}" tabindex="-1" aria-labelledby="participantsModalLabel{{ event.id }}" aria-hidden="true">
				<div class="modal-dialog modal-lg modal-dialog-scrollable">
					<div class="modal-content modal-content-custom">
						<div class="modal-header">
							<h5 class="modal-title" id="participantsModalLabel{{ event.id }}">Participants de :
								{{ event.title }}</h5>
							<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
						</div>
						<div class="modal-body">
							{% if event.participants is empty %}
								<p class="text">Aucun participant pour le moment.</p>
							{% else %}
								<ul class="list-group">
									{% for participant in event.participants %}
										<li class="list-group-item participant-entry d-flex justify-content-between">
											<div class="participant-name flex-fill">
												{{ participant.pseudo }}
											</div>
											<div class="participant-action">
												<form method="POST" action="{{ path('organisateur_event_refuse', {'id': event.id, 'userId': participant.id}) }}" style="margin: 0;">
													<input type="hidden" name="_token" value="{{ csrf_token('refuse_' ~ event.id ~ '_' ~ participant.id) }}">
													<button type="submit" class="btn btn-outline-danger btn-sm">Refuser</button>
												</form>
											</div>

										</li>
									{% endfor %}
								</ul>
							{% endif %}
						</div>
						<div class="modal-footer">
							<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
						</div>
					</div>
				</div>
			</div>
		{% endif %}
	{% endfor %}
	{% block stylesheets %}
		<link rel="stylesheet" href="{{ asset('css/organisateur/events.css') }}">
	{% endblock %}
{% endblock %}
{% block javascripts %}
	{{ parent() }}
	<script>
		document.addEventListener('DOMContentLoaded', () => {
document.querySelectorAll('.refuse-form').forEach(form => {
form.addEventListener('submit', e => {
e.preventDefault();

const formData = new FormData(form);
const action = form.getAttribute('action');

fetch(action, {
method: 'POST',
body: formData
}).then(response => {
if (response.ok) { // Retirer le participant du DOM
form.closest('.participant-entry').remove();
} else {
console.error('Erreur lors de la requête');
}
}).catch(error => {
console.error('Erreur:', error);
});
});
});
});
	</script>
{% endblock %}
