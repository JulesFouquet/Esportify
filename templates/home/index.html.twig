{% extends 'base.html.twig' %}

{% block title %}Accueil - Esportify
{% endblock %}

{% block body %}
	<meta name="csrf-token" content="{{ csrf_token('toggle_favorite') }}">

	{% set now = date() %}

	<div class="titre">
		<h1>Bienvenue sur
			<strong>Esportify</strong>
		</h1>
		<p class="lead">La plateforme dédiée à vos tournois e-sport préférés.</p>
	</div>

	<section class="presentation">
		<p>
			Esportify — Crée tes tournois et rejoins les compétitions e-sport qui te passionnent !<br>
			Une plateforme conçue pour simplifier l’organisation des événements et connecter les joueurs du monde entier.
		</p>
	</section>

	<!-- Événements en cours -->
	<section class="eventHome">
		<h2>Événements en cours</h2>
		{% set ongoingEvents = events|filter(event => event.startDateTime <= now and event.endDateTime >= now) %}
		{% if ongoingEvents|length == 0 %}
			<p>Aucun événement en cours actuellement.</p>
		{% else %}
			<div class="row">
				{% for event in ongoingEvents|slice(0, 3) %}
					<div class="col-md-4 mb-4">
						{{ include('event/card.html.twig', {event: event, modalPrefix: 'home', modifiableEventIds: []}) }}
					</div>
				{% endfor %}
			</div>
		{% endif %}
	</section>

	<!-- Événements à venir -->
	<section class="eventHome">
		<h2>Événements à venir</h2>
		{% set upcomingEvents = events|filter(event => event.startDateTime > now) %}
		{% if upcomingEvents|length == 0 %}
			<p>Aucun événement à venir actuellement.</p>
		{% else %}
			<div class="row">
				{% for event in upcomingEvents|slice(0, 3) %}
					<div class="col-md-4 mb-4">
						{{ include('event/card.html.twig', {event: event, modalPrefix: 'home', modifiableEventIds: []}) }}
					</div>
				{% endfor %}
			</div>
		{% endif %}
	</section>
</div>

{% block javascripts %}
	<script>
		function showToast(message) {
let toast = document.getElementById('toast-notification');
if (! toast) {
toast = document.createElement('div');
toast.id = 'toast-notification';
toast.style.position = 'fixed';
toast.style.bottom = '20px';
toast.style.right = '20px';
toast.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';
toast.style.color = 'white';
toast.style.padding = '10px 20px';
toast.style.borderRadius = '5px';
toast.style.fontSize = '14px';
toast.style.zIndex = '1050';
toast.style.opacity = '0';
toast.style.transition = 'opacity 0.3s ease-in-out';
document.body.appendChild(toast);
}
toast.textContent = message;
toast.style.opacity = '1';
setTimeout(() => {
toast.style.opacity = '0';
}, 2000);
}

function attachFavoriteToggleListeners() {
const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
document.querySelectorAll('.fa-star-toggle').forEach(star => {
star.addEventListener('click', function (e) {
e.preventDefault();
e.stopPropagation();
e.stopImmediatePropagation();
// empêche d'autres handlers sur cet élément
// ...
const icon = this;
const eventId = icon.dataset.eventId;

fetch (`/favoris/toggle/${eventId}`, {
method: 'POST',
headers: {
'X-Requested-With': 'XMLHttpRequest',
'Content-Type': 'application/json',
'X-CSRF-TOKEN': csrfToken
},
body: JSON.stringify({})
}).then(response => {
if (!response.ok) 
throw new Error('Erreur réseau');



return response.json();
}).then(data => {
if (data.status === 'added') {
icon.classList.remove('fa-regular');
icon.classList.add('fa-solid');
icon.title = 'Retirer des favoris';
showToast('Événement ajouté aux favoris !');
} else if (data.status === 'removed') {
icon.classList.remove('fa-solid');
icon.classList.add('fa-regular');
icon.title = 'Ajouter aux favoris';
showToast('Événement retiré des favoris.');
}
}).catch(() => alert('Une erreur est survenue. Veuillez réessayer.'));
});
});
}

document.addEventListener('DOMContentLoaded', () => {
attachFavoriteToggleListeners();
});
	</script>
{% endblock %}

<style>
	.card:hover {
		box-shadow: 0 0 12px rgba(0, 0, 0, 0.2);
		transform: translateY(-4px);
		transition: all 0.2s ease-in-out;
		cursor: pointer;
		filter: brightness(0.95);
	}
	.card {
		pointer-events: auto; /* normal */
	}

	.fa-star-toggle {
		pointer-events: auto; /* assure que l'étoile peut être cliquée indépendamment */
	}

	.event-card {
		min-height: 210px;
		border: 2px solid #3399ff;
	}
	.titre {
		color: #f1f1f1;
		padding: 70px 40px 30px;
		text-align: center;
	}
	.titre h1 {
		font-size: 4.5em;
		font-weight: bold;
	}
	.titre strong {
		color: #f8f9fa;
		text-shadow: 0 0 5px #00f2ff, 0 0 10px #f8f9fa;
	}
	.titre .lead {
		font-size: 1.8em;
		margin-top: 10px;
		color: #ccc;
	}
	.presentation {
		margin: 30px, 0, 20px;
		padding: 20px;
		border-radius: 8px;
		font-size: 1.3em;
	}
	.eventHome h2 {
		margin-bottom: 25px;
	}
</style>{% endblock %}
